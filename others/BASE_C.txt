-----------------------------------------------------------------------------------------------------

>>> BASE ! ! !

*usuarios, grupos e permissoes
	
	usuarios
		
		adicionar usuário: sudo adduser <nome_usuario>

		remover usuário: sudo userdel <nome_usuario>

		remover usuário (mais diretorios): sudo userdel -r <nome_usuario> 

		trocar senha usuário: sudo passwd <nome_usuario>	
	
		logar com outro usuário (pode passar diretamente o login como parâmetro): sudo login 

		sair do usuário logado (voltar para o que estava antes): logout

		para adicionar um usuário ao grupo sudo (para ganhar privilégios de administrador): sudo adduser <nome_usuario> sudo
		
	grupos
	
		para adicionar um grupo: sudo addgroup <nome_grupo>

		para remover um grupo: sudo delgroup <nome_group>

		para adicionar um usuário a um grupo: sudo adduser <nome_usuario> <nome_grupo>

		para remover um usuário de um grupo: sudo deluser <nome_usuario> <nome_grupo>

	path dos arquivos que guardão as informações
	
		path grupos criados: cat /etc/group

			localizar um grupo específico, serve também para verificar quem está naquele grupo (exemplo de utilização "grep"): grep financeiro /etc/group 
	
		path para usuários: cat etc/passwd

			localiza um usuário específico, serve tbm para ver informações (exemplo de utilização "grep"): grep rhuna /etc/passwd
			
	permissões
	
		existem 3 (três) tipos de permissões no linux

			r: read (ler)
			w: write (escrever)
			x: execute (executar)

		na hora de serem apresentadas, se tiverem um ifen/traço/menos ("-") significa que está permissão está desligada (não está habilitada) (binário)
		
			exemplo: r-x
				 101
			
		número das permissões
		
			rwx (soma das permissões = 7)
			421
		
		existem 3 grupos de permissções
		
			Proprietario   Grupo   Todos
			rwx	       rwx     r-x	
			7	       7       5

		alterando permissões
		
			comando chmod
			
			sudo chmod 700 pasta/ -R // dessa forma estou dizendo que o proprietário tem todos as permissções sobre está pasta, o grupo nenhuma e todos também nenhuma

		trocando o proprietário de uma pasta
			
			sudo chown <usuario_vai_receber_dono> path/ -R

-----------------------------------------------------------------------------------------------------

>>> LEGENDA ! ! !

	grupos/usuários

		programas

			adduser - adiciona um usuário
			addgroup - adiciona um grupo
			deluser - remove um usuário
			passwd - altera a senha de um usário
			delgroup - deleta grupo em questão
			newgrp sudo - atualiza o grupo
			id - mostra os id's e grupos 
			usermod - mudar características do usuário

		arquivos

			/etc/passwd - contem a lista de todos os usuário locais
			/etc/shadow - contem hash's de senhas dos usuários (criptográfia das senhas)
			/etc/group - contem a lista de todos os grupos
			/etc/gshadow - equivalente ao "shadow" só que para grupos

			editores que durante a edição do arquivo deixa o arquivo "locked" (que somente um usuário pode mecher no arquivo por vez)

				vipw - para alterar o passwd
				vigr - para alterar o group
				vipw -s - para alterar o shadow
				vigr -s - para alterar o gshadow

	permissões de arquivos

		programas

			ls -l - visualizar permissões
			chmod 755 - definir permissões		
			classes: ugoa
			permissões: +r -r, +w -w, +x -x

			chown dono:grupo arquivo
			chgrp grupo arquivo

		exemplos

			chmod g+r arquivo - da a permissão de leitura (+r) para a classe grupo (g)
			chmod ug+r arquivo - da permissão de leitura (+r) para as classes do usuário e do grupo (ug)
			chmod g+wx arquivo - da permissão de gravação e de execução (+wx) da classe grupo (g)

-----------------------------------------------------------------------------------------------------