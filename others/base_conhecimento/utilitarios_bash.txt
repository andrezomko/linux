~ utilitarios do bash ~

* tr // cortar e substituir caracteres

$ tr 'w' 'v' < teste1 > teste2
$ tr 'a-z' 'A-Z' < propaganda.txt > propaganda-M.txt
$ tr -d '#' < teste.conf > teste2.conf
$ tr -s 'ff' < teste1 > teste2

$ tr -d '\n' | xclip -selection clipboard
$ acpi | tr -d '[:blank:]'

Classe	 | Significado
-------- | -------------------------
alnum	 | Caracteres alfanuméricos
alpha	 | Caracteres alfabéticos
blank	 | Espaços em branco
digit	 | Caracteres numéricos
graph	 | Caracteres gráficos
lower	 | Caracteres minúsculos
print	 | Caracteres imprimíveis
punct	 | Caracteres de pontuação
special	 | Caracteres especiais
upper	 | Caracteres em maiúsculas
xdigit	 | Caracteres hexadecimais

* cut // mostra somente por colunas ou caracteres

$ cut -d' ' -f2 Lista_Frutas
$ cut -d' ' -f2,3 Lista_Frutas
$ cut -d' ' -f2,3 Lista_Frutas | sort
$ cut -d: -f1 /etc/passwd
$ cut -c1,2 Lista_Frutas
$ grep "/bin/bash" /etc/passwd | cut -d: -f1,3

* tee // além de mostrar na saida padrão joga para dentro de um arquivo

$ tee teste.txt
$ tee -a teste.txt
$ cat teste.txt | tee teste2.txt

* sed // cortar e substituir caracteres

opções

-g: trata todoas as substituições como globais
-i: edita o próprio arquivo

comandos

d: apaga linhas
	# apaga linhas 1 e 2 do arquivi
	sed '1,2d' arquivo.txt

	# apaga todas as linhas que começam com "#"
	sed '/^#/d' arquivo.txt

s: realiza substituições
	sed 's/marcos\|eric\|camila/pinguim/g' arquivo.txt
	sed 's/palavra/outra/' arquivo.txt

y: subistituir
	# troca todas as ocorrencias de "chato" para "legal"
	sed 'y/chato/legal/' arquivo.txt

* vim

replace

# encontra cada ocorrência de ‘foo’ (em todas as linhas) e substitui por ‘bar’:
:%s/foo/bar/g

# encontra cada ocorrência de ‘foo’ (apenas na linha atual) e substitui por ‘bar’:
:s/foo/bar/g

# substitui cada ‘foo’ por ‘bar’, mas pedindo confirmação primeiro:
:%s/foo/bar/gc

# substitui apenas palavras inteiras que correspondam com ‘foo’ por ‘bar’, pedindo por confirmação:
:%s/\<foo\>/bar/gc

# substitui cada ‘foo’ (case insensitive) por ‘bar’, pedindo por confirmação (usado após o uso de :set noignorecase para fazer as consultas serem case sensitive, que é o padrão):
:%s/foo/bar/gci

# substitui cada ‘foo’ (case sensitive) por ‘bar’, pedindo por confirmação (usado após o uso de :set ignorecase para fazer as consultas serem case insensitive):
:%s/foo/bar/gcI

-----------------------------------------------------------------------------------------------------------------------------------------------------

CORES BASH (ANSI)

Abertura e fechamento:

\e[<cod_bg>;<cod_fg>m<texto>\e[m

# FG

PRETO	 30
VERMELHO 31
VERDE	 32
AMARELO	 33
AZUL	 34
MAGENTA	 35
CIANO	 36
BRANCO	 37

# BG

PRETO	 40
VERMELHO 41
VERDE	 42
AMARELO	 43
AZUL	 44
MAGENTA	 45
CIANO	 46
BRANCO	 47

# EFEITOS

NORMAL	       0
NEGRITO	       1
BAIXA INTENSID 2
ITALICO	       3
SUBLINHADO     4
PISCANDO       5
PISCA RAPIDO   6
INVERSO	       7
INVISIVEL      8

-----------------------------------------------------------------------------------------------------------------------------------------------------
