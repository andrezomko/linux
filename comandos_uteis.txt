>>> Comandos Aleatoriamente úteis !

-----------------------------------------------------------------------------------------------------

! git 

*renomear repositorio remoto

$ git remote rename <nome_atual> <novo_nome>

*pasta inacessivel (pasta com submodule)

$ git rm --cached <nome_pasta>
$ rm -Rf <nome_pasta>/.git
$ git add .
$ git push origin master

*manipulação de branch

$ git branch ou $ git branch --list // mostra branchs locais
$ git remote show <nome_remoto> // mostra além das branchs remotas, outras infos

$ git checkout <nome_branch> // troca de branch
$ git checkout -b <nova_branch> // cria e muda para uma nova ramificação 

$ git branch -d <nome_branch> // remove branch local
$ git branch -D <nome_branch> // força exclusão da branch

$ git push origin :<branch_remoto> // remove branch remoto
$ git push origin --delete <branch_remoto> // remove branch remoto

*visualização de log's

$ git log // mostro os log's por completo
$ git log --oneline // mostra os log's resumidos

$ git log --graph --all // mostra por completo o gráfico de nodles
$ git log --oneline --graph --all // mostra de forma resumida o gráfico de nodles

*setando e removendo token pessoal de acesso (github)
   
   setando pelo cache

      1) $ git config --global credential.helper 'cache --timeout=28800' // se não passar o parâmetro "--global" ele seta para um diretorio específico?
      2) próximo login e senha (token digitado) ficara salvo pelo tempo determina (sem passar parametro o padrão é 15min (900s))

   removendo
      
      para remover: $ git credential-cache exit

   setando da maneira "correta"? (usando Keyring)
   
      1) $ instalar o make (make developer tools)
            1.1) $ sudo snap install ubuntu-make --classic
            1.2) $ sudo snap install ubuntu-make --edge
            1.3) $ sudo snap refresh ubuntu-make
      2) $ sudo apt install gcc -- ou -- $ sudo apt install build-essential
      3) $ sudo apt-get install libsecret-1-0 libsecret-1-dev
      4) $ cd /usr/share/doc/git/contrib/credential/libsecret
      5) $ sudo make
      6) $ git config --global credential.helper /usr/share/doc/git/contrib/credential/libsecret/git-credential-libsecret
      ou
      6) $ nano ~/.gitconfig
	      [credential]
              helper = /usr/share/doc/git/contrib/credential/libsecret/git-credential-libsecret
         
   para remover
   
      $ git config --global --unset credential.helper

*para manipular informações do usuários

$ cd ~/.gitconfig

-----------------------------------------------------------------------------------------------------

*manipulando variável PS1

*exibir branch no terminal (bash)

	$ export PS1='\[\033[01;32m\]\u@\h\[\033[01;37m\]:\[\033[00m\]\[\033[01;34m\]\w\[\033[0;35m\]$(__git_ps1 "(%s)")\[\033[01;37m\]$\[\033[00m\] '
	
*cor para usuário root (bash)

	$ export PS1='\[\033[01;31m\]\u@\h\[\033[01;37m\]:\[\033[00m\]\[\033[01;34m\]\w\[\033[01;37m\]$\[\033[00m\] '

*instalando zsh/oh-my-zsh

	~ zsh ~

	1) $ sudo apt install zsh
	2) $ chsh -s $(which zsh)
	3) encerrar sessão ($ pkill -9 -u $USER)
	4) abra o terminal (ctrl+shift+t)
	5) ira mostrar uma msng do proprio zsh para finalizar a configuração, digite 2 para terminar a configuração

	~ oh-my-zsh ~ (colocando oh-my-zsh no usuario normal)

	1) $ sh -c "$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)"
	
	ou
	
	1) $ sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

*colocar oh-my-zsh no root

	1) $ sudo cp /$HOME/.zshrc /root
	2) $ sudo cp -r /$HOME/.oh-my-zsh /root
	3) $ editar o arquivo ".zshrc" no root para trocar a linha que contenha o path do usuario normal para colocar o root
		3.1) $ sudo nano /root/.zshrc
		3.2) de....: export ZSH="/home/$USER/.oh-my-zsh" 
		     para..: export ZSH="/root/.oh-my-zsh" 

valores

	\u: usuário atual
	\h: nome da máquina (host)
	\H: nome da máquina completo
	\w: diretório de trabalho atual
	\W: diretório de trabalho atual com o nome base (último segmento) apenas
	$(__git_ps1 "%s"): branch atual caso esteja em um repositório git, se não, não exibe nada.

obs: para setar permanentemente adicione essa script na última linha do arquivo ~/.bashrc (tanto na home do usuario normal quanto na home do root)

-----------------------------------------------------------------------------------------------------

*baixar ppa pelo terminal

$ sudo add-apt-repository ppa:<nome_ppa>

*remover ppa pelo terminal

$ sudo add-apt-repository -r ppa:<nome_ppa>

-----------------------------------------------------------------------------------------------------

*instalar wine

1) $ sudo dpkg --add-architecture i386
2) $ wget -nc https://dl.winehq.org/wine-builds/winehq.key
3) $ sudo apt-key add winehq.key
4) $ sudo add-apt-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main' ---> verificar repo atual no site: https://wiki.winehq.org/Download
5) $ sudo add-apt-repository ppa:cybermax-dexter/sdl2-backport
6) $ sudo apt update
7) $ sudo apt install --install-recommends winehq-stable -y
8) $ winecfg ou $ sudo apt install wine

-----------------------------------------------------------------------------------------------------

*comando para ver porcentagem da bateria -> acpi

como usar: $ acpi

-----------------------------------------------------------------------------------------------------

*matar processos no linux

$ ps -A // mostra todos os processos e id's
$ killall <nome_processo> // mata todos os processos com tal nome

ou

$ kill <id_processo>

-----------------------------------------------------------------------------------------------------

*saber arquitetura do sistema

$ uname -m

-----------------------------------------------------------------------------------------------------

*limpar cache

$ sync ; echo 3 > /proc/sys/vm/drop_caches

-----------------------------------------------------------------------------------------------------

*saber interface gráfica atual

$ echo $XDG_CURRENT_DESKTOP

-----------------------------------------------------------------------------------------------------

*comando para mostrar arvore -> tree

como usar: $ tree
           $ tree <diretorio>
           $ tree -L <valor> // ira limitar o encadeamento

-----------------------------------------------------------------------------------------------------

*comando para busca de arquivos e diretorios

$ find . -name <path>

ou

$ find / -maxdepth 3 -name <path>

exemplo de uso
	
	entrada..: $ find ~/ -name autostart
	saida....: /home/rhuna/.config/autostart

-----------------------------------------------------------------------------------------------------

*compactar .tar.gz

$ tar -zcvf pasta_compactada.tar.gz /etc/passwd /var/log

*descompactar .tar.gz

$ tar -zxvf pasta_compactada.tar.gz

*ver .tar.gz

$ tar -tf pasta_compactada.tar.gz

*descompactar .tar.xz

$ tar -xvf arquivos.tar.gz

-----------------------------------------------------------------------------------------------------

*mostra uso da RAM

$ free -h

ou

$ top

-----------------------------------------------------------------------------------------------------

*mostra a distro

$ lsb_release -a

-----------------------------------------------------------------------------------------------------

*corrigir pacotes quebrados

$ sudo apt-get install -f

-----------------------------------------------------------------------------------------------------

*mostra o tamanho dos direitos

$ du -sch *

-----------------------------------------------------------------------------------------------------

*mostra partições e tamanho dos discos

$ df -h

-----------------------------------------------------------------------------------------------------

*mostra tamanho dos discos

$ sudo fdisk -l /dev/sda

-----------------------------------------------------------------------------------------------------

*comando para ver consumo de RAM por processos? smen & top

$ top

ou

$ smem -r

-----------------------------------------------------------------------------------------------------

*remove completamente o programa

$ sudo apt-get purge <pacote>

ou

$ sudo apt-get --purge remove <pacote>

-----------------------------------------------------------------------------------------------------

*lista todos os programas instalados

$ sudo dpkg -l

obs: joga a saida para um arquivo de texto para poder abrir num editor, assim pode-se procurar por algo
mais especifico para fazer alguma ação!

exemplo: $ dpkg -l > ~/saida.txt

-----------------------------------------------------------------------------------------------------

*ver tamanho de diretorios modo texto

como usar: $ ncdu <pode_passar_path> // "d" exclui

-----------------------------------------------------------------------------------------------------

*gravador nativo linux?

1) $ gsettings set org.gnome.settings-daemon.plugins.media-keys max-screencast-length 0 // deixar tempo ilimitado de gravação
2) ctrl + alt + shift + r // inicia gravação
3) ctrl + alt + shift + r // encerra gravação

-----------------------------------------------------------------------------------------------------

*comando para buscar trecho de textos

$ grep -Ri "trecho" /var/www/* ou ~/Documentos/teste.txt

obs: ele vai buscar recursivamente (-R), sem case sensitive (-i) a palavra ou frase dentro de aspas duplas no diretorio tal com todos arquivos ou não ou em um documento especifico

-----------------------------------------------------------------------------------------------------

*IP interno

$ hostname -I

-----------------------------------------------------------------------------------------------------

*como inserir icones no "menu de aplicativos" e adiciona-los na "barra de favoritos"

1) Crie um arquivo .desktop em: ~/.local/share/applications

    exemplo: touch ~/.local/share/applications/nome_arquivo.desktop 

2) Edite o arquivo inserindo as seguintes linhas

   [Desktop Entry]
   Comment=Nome App
   Terminal=false
   Name=Nome App
   Exec=/path/to/your/app
   Type=Application
   Icon=/path/to/your/app/icon.xpm

3) Torne o .desktop criado em executavel

   $ chmod +x nome_arquivo.desktop

4) Clicando em "Mostrar Aplicativos"
5) Busque pelo nome do aplicativo
6) Com botão direito do mouse no mesmo, escolha "Adicionar aos favoritos"

-----------------------------------------------------------------------------------------------------

*atualiza a distro?

$ sudo do-release-upgrade -d

-----------------------------------------------------------------------------------------------------

*variáveis de ambiente (escopo global)
	
	mostrar variáveis de ambiente (do usuario corrente)
	
		$ env
		
	criar variável de ambiente (escopo global)

		$ export edward="hostinger"

-----------------------------------------------------------------------------------------------------

*mapear teclas e ações 

$ xev | sed -ne '/^KeyPress/,/^$/p'

-----------------------------------------------------------------------------------------------------

*dispositivos conectados

$ xinput -list

&&

$ lsusb

-----------------------------------------------------------------------------------------------------

*kernel do sistema

$ uname -r

-----------------------------------------------------------------------------------------------------

*editor de texto padrão

	para saber qual 

		$ cat /usr/share/applications/defaults.list

	para escolher o editor padrão modo texto / ver o editor padrão modo texto

		$ sudo update-alternatives --config editor

-----------------------------------------------------------------------------------------------------

*mudar terminal padrão

$ sudo update-alternatives --config x-terminal-emulator

-----------------------------------------------------------------------------------------------------

*mudar shell padrão

	mudando diretamente no arquivo:
		
		$ sudo nano /etc/passwd
		
	rodando:
	
		$ chsh -s $(which zsh)
		
-----------------------------------------------------------------------------------------------------

*alias (definir permanente)
	
	1) $ nano ~/.bashrc

	entre no campo (bloco) específico do "alias"
	
	2) $ alias <nome_atalho>='<comando>'
	3) $ source .bashrc

-----------------------------------------------------------------------------------------------------

*encriptar arquivos
	
	caso os arquivos que seram encriptados ainda não tenham uma pasta preparada
	
		1) $ mkdir ~/privado // crie a pasta
		2) $ sudo chmod 700 ~/privado // faça que apenas o dono tenha permissões sobre ela
		
		obs: primeiro faça o processo de montagem e depois coloque os arquivos dentro da mesma
		
	montando o sistema de arquivos com a pasta "privada"
	
		1) $ sudo mount -t ecryptfs ~/privado ~/privado // montando a pasta
			1.1) $ 2
			1.2) $ <digite_a_senha>
			1.3) $ 1
			1.4) $ 1
			1.5) $ n
			1.6) $ n
			1.7) $ yes
			1.8) $ yes

		obs: coloque os arquivos na pasta
		
		2) $ sudo umount ~/privado // desmonta a pasta (efetivamente os arquivos estaram agora encriptados)
		3) $ sudo mount -t ecryptfs ~/privado ~/privado -o key=passphrase,ecryptfs_cipher=aes,ecryptfs_key_bytes=16,ecryptfs_passthrough=n // desmonta novamente a pasta para conseguer ter acesso aos arquivos	

		obs: para fefinir no "ALias"

			no campo (bloco) correto dentro de .bashrc

			mountt() {
			   sudo mount -t ecryptfs "$1" "$2"; 
			}

			remountt() {
			   sudo mount -t ecryptfs "$1" "$2" -o key=passphrase,ecryptfs_cipher=aes,ecryptfs_key_bytes=16,ecryptfs_passthrough=n
			}

-----------------------------------------------------------------------------------------------------

*como saber a placa de vídeo

$ lspci | grep VGA

-----------------------------------------------------------------------------------------------------

*mudar resolução da tela via terminal 

https://www.tutorialeinformacao.com.br/2020/07/forcar-resolucao-de-tela-no-linux.html

-----------------------------------------------------------------------------------------------------

*colocar programas para autostart 

	1) crie um arquivo ".desktop" dentro da pasta "~/.config/autostart/"
	2) coloque nesse arquivo:
	
		[Desktop Entry]
		Type=Application
		Exec=</path/to/binary or command to execute>
		Hidden=false
		NoDisplay=false
		X-GNOME-Autostart-enabled=true
		Name=<Name_to_be_displayed>
		Comment=<optional comment>
		
	obs: caso a pasta ainda não exista, basta cria-la
	1) $ mkdir ~/.config/autostart/

-----------------------------------------------------------------------------------------------------

*cron - adicionar alguma tarefa

	sintaxe: m h dm m ds command
	exemplo de horario: 0 8 * * 1,2,3,4,5 // de segunda a sexta às 08:00

	1) $ crontab -e
	2) $ inserir na última linha sempre

-----------------------------------------------------------------------------------------------------

*hard links / links simbolicos

$ ls -i ~/arq.txt // mostra o "inode" do arquivo
$ file ~/arq.txt // mostra o tipo do arquivo e seu path

	link simbolico
	
		1) $ ln -s ~/path/to/arquivo.txt ~/home/nome_link_simbolico
		
		obs: tem que passar o path completo para esta operação
		obs: o link simbólico terá um inode diferente do arquivo original e o arquivo original for corrompido o link se tornara inutil
		
	hard link
	
		1) $ ln -s ~/path/to/arquivo.txt ~/home/nome_link_simbolico
		
		obs: o hard link tem o mesmo inode do original e se o original for corrompido o link fica independente

-----------------------------------------------------------------------------------------------------

*rodar um comando em outra janela de terminal

$ gnome-terminal -x sh -c "<comando>; bash" // abre em outra guia

ou

$ gnome-terminal -- sh -c "<comando>; bash" // abre em outra janela

-----------------------------------------------------------------------------------------------------

*calendario

$ cal <mes> <ano>

*hora/data de hoje

$ date

-----------------------------------------------------------------------------------------------------

*para instalar quaisquer dependencias que possam ter sidas removidas (para ubuntu)

$ sudo apt install ubuntu-desktop

-----------------------------------------------------------------------------------------------------

*adicionando $PATH (diretorio de binários)

$ export PATH=$PATH:/home/user/scripts

obs: para adicionar permanentemente, insira esse script na última linha do arquivo do seu shell (exemplo: .bashrc)

-----------------------------------------------------------------------------------------------------

*como passar senha para comando sudo automáticamente

$ echo -e "senha\n" | sudo -S <comando>

obs: parâmetro -S no sudo aceita outra etrada de dado que não seja e entrada padrão via terminal esperando receber no final da string uma nova linha
	
-----------------------------------------------------------------------------------------------------

*como encerrar o terminal depois de executar um comando

$ kill -9 $$

ou

$ exec <comando> // usando o "exec" depois de executar a sessão de terminal corrente é encerrada

-----------------------------------------------------------------------------------------------------

*rodar programas ou comandos em segundo plano

	$ <programa> &
	$ bg // com o programa em execução
	$ ctrl+z // com o programa em execução

mostrar programas em segundo plano: 

	$ jobs

para trazer um programa para primeiro plano:

	$ fg <programa>

-----------------------------------------------------------------------------------------------------

*protetor de tela modo texto com infos do sistema

$ neofetch

obs: como instalar o programa em "./ferramentas.txt"

-----------------------------------------------------------------------------------------------------

*minimizar tela do terminal corrente (com xdotool)

1) $ var=$(xdotool getactivewindow)
2) $ xdotool windowminimize "$var"

obs: como instalar o programa em "./ferramentas.txt"

-----------------------------------------------------------------------------------------------------

*rodar um comando como se estivesse logado como root

$ su -c "<comando>"

-----------------------------------------------------------------------------------------------------

*reiniciar o sistema

$ reboot

ou

$ exec /sbin/init

-----------------------------------------------------------------------------------------------------

*copiar saida de comando para a área de transferencia

$ pwd | xclip -selection clipboard

ou

$ pwd | tr -d '\n' | xclip -selection clipboard // para remover a "new line"

obs: criar um alias para falicitamento 
	
	$ alias cb="tr -d '\n' | xclip -selection clipboard"
	
	exemplo
	
	$ pwd | cb
	
	
*copiar saida de comando para dentro de um abiente 'X'

copiar

	$ pwd | xclip

colar

	$ xclip -o

exemplo

	1) $ pwd | xclip
	2) $ xclip -o | cd
	
obs: criar um alias para falicitamento

	$ alias c='xclip'
	$ alias v='xclip -o'
	
exemplo

	1) $ pwd | xclip
	2) $ cd `v`
	ou
	2) $ cd $(v)

-----------------------------------------------------------------------------------------------------

*mostra os programas baixado em apt

$ sudo ls /etc/apt/sources.list.d

-----------------------------------------------------------------------------------------------------

*pegar o "valor bruto" da memória ram em buff/cache

$ free -h | cut -d' ' -f45 | grep "2" | cut -c1

-----------------------------------------------------------------------------------------------------

*depurar programas

$ sh -x programa

-----------------------------------------------------------------------------------------------------

*sempre pedir a senha do sudo (reseta o tempo de armazenar a senha)


colocar "Defaults:ALL timestamp_timeout=0" na última linha do "/etc/sudoers"

	$ echo -e "\nDefaults:ALL timestamp_timeout=0" >> /etc/sudoers
	
força em pedir a senha do sudo

	$ sudo -k comando
		
-----------------------------------------------------------------------------------------------------

*exibir info do sistema

$ lshw

-----------------------------------------------------------------------------------------------------

*informações completas da máquina

$ inxi

ou

$ inxi -F

ou

$ inxi -Fxz

-----------------------------------------------------------------------------------------------------

*volta para o diretorio anterior (equivalente a "$ cd $OLDPWD")

$ cd -

-----------------------------------------------------------------------------------------------------

*pegar/cortar determinado linhas de coluna de um arquivo

$ head -5 /etc/passwd

-----------------------------------------------------------------------------------------------------

*cortar colunas de arquivos

$ cut -d':' -f1,7 /etc/passwd

ou

$ cut -c1-3 /etc/passwd

-----------------------------------------------------------------------------------------------------

*organizar arquivos em colunas

$ column -s':' -t /etc/passwd

-----------------------------------------------------------------------------------------------------

*força o reboot?

$ systemctl reboot -i

-----------------------------------------------------------------------------------------------------

*para alterar data/hora do sistema

$ sudo date -s "mes/dia/ano 13:30"

*para atualizar automáticamente

$ sudo hwclock -s

-----------------------------------------------------------------------------------------------------

*saber todos os probrmas que já foram instalados?

$ history | grep "apt install" > instalados.txt; history | grep "apt-get install" >> instalados.txt

-----------------------------------------------------------------------------------------------------

*mostra o tamanho de uma pasta/arquivo específico

$ du -sh /path

-----------------------------------------------------------------------------------------------------
